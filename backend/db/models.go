// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package db

import (
	"database/sql/driver"
	"fmt"
)

type UsersVolunteerType string

const (
	UsersVolunteerTypeVolunteer UsersVolunteerType = "volunteer"
	UsersVolunteerTypeShiftLead UsersVolunteerType = "shift_lead"
)

func (e *UsersVolunteerType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UsersVolunteerType(s)
	case string:
		*e = UsersVolunteerType(s)
	default:
		return fmt.Errorf("unsupported scan type for UsersVolunteerType: %T", src)
	}
	return nil
}

type NullUsersVolunteerType struct {
	UsersVolunteerType UsersVolunteerType
	Valid              bool // Valid is true if UsersVolunteerType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullUsersVolunteerType) Scan(value interface{}) error {
	if value == nil {
		ns.UsersVolunteerType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UsersVolunteerType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullUsersVolunteerType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.UsersVolunteerType), nil
}

type User struct {
	VolunteerName            string
	VolunteerType            UsersVolunteerType
	TotalHoursVolunteered    float64
	TotalPoundsFoodRecovered float64
	TotalNumberMealsGiven    float64
}
