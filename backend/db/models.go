// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package db

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type ShiftsType string

const (
	ShiftsTypeRecovery   ShiftsType = "recovery"
	ShiftsTypeResourcing ShiftsType = "resourcing"
	ShiftsTypeMealPrep   ShiftsType = "meal_prep"
)

func (e *ShiftsType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ShiftsType(s)
	case string:
		*e = ShiftsType(s)
	default:
		return fmt.Errorf("unsupported scan type for ShiftsType: %T", src)
	}
	return nil
}

type NullShiftsType struct {
	ShiftsType ShiftsType
	Valid      bool // Valid is true if ShiftsType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullShiftsType) Scan(value interface{}) error {
	if value == nil {
		ns.ShiftsType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ShiftsType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullShiftsType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ShiftsType), nil
}

type UsersType string

const (
	UsersTypeVolunteer UsersType = "volunteer"
	UsersTypeShiftLead UsersType = "shift_lead"
)

func (e *UsersType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UsersType(s)
	case string:
		*e = UsersType(s)
	default:
		return fmt.Errorf("unsupported scan type for UsersType: %T", src)
	}
	return nil
}

type NullUsersType struct {
	UsersType UsersType
	Valid     bool // Valid is true if UsersType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullUsersType) Scan(value interface{}) error {
	if value == nil {
		ns.UsersType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UsersType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullUsersType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.UsersType), nil
}

type Shift struct {
	ID        int32
	StartTime time.Time
	EndTime   time.Time
	Type      ShiftsType
}

type ShiftLeader struct {
	ID      int32
	UserID  int32
	ShiftID int32
}

type ShiftVolunteer struct {
	ID      int32
	UserID  int32
	ShiftID int32
}

type User struct {
	ID    int32
	Name  string
	Email string
	Phone sql.NullString
	Type  UsersType
}

type VolunteerCompletedShift struct {
	ID      int32
	UserID  int32
	ShiftID int32
}
